@model Treehouse.FitnessFrog.Models.Entry
@using Treehouse.FitnessFrog.Models
@{
    ViewBag.Title = "Add Entry";

    //var selectListItems = new[]
    //{
    //    new SelectListItem() { Value="1", Text="Item 1", Selected = false},
    //    new SelectListItem() { Value="2", Text="Item 2", Selected = true}
    // };

    //var items = new[]
    //{
    //    new { Id = 1, Name = "Item 1"},
    //    new { Id = 2, Name = "Item 2"}
    //};
    //var selectListItems = new SelectList(items, "Id", "Name");




}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    <div class="row">

        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(m => m.Date, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Date, "{0:d}",new { @class = "form-control datepicker" })
                @*@Html.Label("Date", new { @class = "control-label"})
                @Html.TextBox("Date", null, new { @class="form-control"})*@
                @*<label for="Date" class="control-label">Date</label>
                <input type="text" id="Date" name="Date" value="@ViewBag.Date" class="form-control" />*@
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ActivityId, new { @class = "control-label" })
                @Html.DropDownListFor(m => m.ActivityId, 
                        (SelectList)ViewBag.ActivitiesSelectedListItems,"", new { @class = "form-control" })
                @*@Html.DropDownListFor(m => m.ActivityId,selectListItems ,new { @class = "form-control" })*@
                @*@Html.Label("ActivityId", new { @class = "control-label" })
                @Html.TextBox("ActivityId", null, new { @class = "form-control" })*@
                @*<label for="ActivityId" class="control-label">Activity</label>
                <input type="text" id="ActivityId" name="ActivityId" value="@ViewBag.ActivityId" class="form-control" />*@
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Duration, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Duration, new { @class = "form-control" })
                @*@Html.Label("Duration", new { @class = "control-label" })
                @Html.TextBox("Duration", null, new { @class = "form-control" })*@
                @*<label for="Duration" class="control-label">Duration</label>
                <input type="text" id="Duration" name="Duration" class="form-control" value="@ViewBag.Duration" />*@
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Intensity, new { @class = "control-label" })
                <div>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.Low)@Entry.IntensityLevel.Low
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.Medium)@Entry.IntensityLevel.Medium
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Intensity, Entry.IntensityLevel.High)@Entry.IntensityLevel.High
                     </label>                   
                  </div>
                @*@Html.TextBoxFor(m => m.Intensity, new { @class = "form-control" })*@
                @*@Html.Label("Intensity", new { @class = "control-label" })
                @Html.TextBox("Intensity", null, new { @class = "form-control" })*@
                @*<label for="Intensity" class="control-label">Intensity</label>
                <input type="text" id="Intensity" name="Intensity" class="form-control" value="@ViewBag.Intensity" />*@
            </div>

            <div class="form-group">
                <div class="form-group">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(m => m.Exclude)@Html.DisplayNameFor(m => m.Exclude)
                        </label>
                    </div>
                </div>               
                @*@Html.LabelFor(m => m.Exclude, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Exclude, new { @class = "form-control" })*@
                @*@Html.Label("Exclude", new { @class = "control-label" })
                @Html.TextBox("Exclude", null, new { @class = "form-control" })*@
                @*<label for="Exclude" class="control-label">Exclude</label>
                <input type="text" id="Exclude" name="Exclude" class="form-control" value="@(ViewBag.Exclude != null ? ViewBag.Exclude.ToString() : "")" />*@
            </div>

        </div>

        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(m => m.Notes, new { @class = "control-label" })
                @Html.TextAreaFor(m => m.Notes, 14,20, new { @class = "form-control" })
                @*@Html.Label("Notes", new { @class = "control-label" })
                @Html.TextArea("Notes", null,14,20, new { @class = "form-control" })*@
                @*<label for="Notes" class="control-label">Notes</label>
                <textarea id="Notes" name="Notes" class="form-control" rows="14" cols="20">@ViewBag.Notes</textarea>*@
            </div>

        </div>

        <div class="col-md-12">
            <div class="pad-top">
                <button type="submit" class="btn btn-success btn-lg margin-right">
                    <span class="glyphicon glyphicon-save"></span> Save
                </button>
                <a href="@Url.Action("Index")" class="btn btn-warning btn-lg">
                    <span class="glyphicon glyphicon-remove"></span> Cancel
                </a>
            </div>
        </div>

    </div>
}
@*<form method="post">
</form>*@
